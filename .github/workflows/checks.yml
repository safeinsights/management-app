name: Checks
on:
    push:

    pull_request:
        types:
            - closed

jobs:
    all:
        timeout-minutes: 15
        runs-on: ubuntu-latest
        services:
            db:
                image: postgres:15
                ports:
                    - 5432:5432
                env:
                    POSTGRES_USER: si
                    POSTGRES_DB: si_test
                    POSTGRES_PASSWORD: si
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        permissions:
            pull-requests: write
        env:
            DATABASE_URL: 'postgres://si:si@localhost:5432/si_test'
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
            E2E_CLERK_RESEARCHER_EMAIL: ${{ secrets.E2E_CLERK_RESEARCHER_EMAIL }}
            E2E_CLERK_RESEARCHER_PASSWORD: ${{ secrets.E2E_CLERK_RESEARCHER_PASSWORD }}
            AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
            E2E_CLERK_MEMBER_EMAIL: ${{ secrets.E2E_CLERK_MEMBER_EMAIL }}
            E2E_CLERK_MEMBER_PASSWORD: ${{ secrets.E2E_CLERK_MEMBER_PASSWORD }}
            E2E_CLERK_ADMIN_EMAIL: ${{ secrets.E2E_CLERK_ADMIN_EMAIL }}
            E2E_CLERK_ADMIN_PASSWORD: ${{ secrets.E2E_CLERK_ADMIN_PASSWORD }}
        steps:
            - uses: actions/checkout@v4
            - uses: bahmutov/npm-install@v1
            - name: Get installed Playwright version
              shell: bash
              working-directory: ${{ inputs.WORKSPACE_ROOT }}
              id: playwright-version
              run: echo "PLAYWRIGHT_VERSION=$(cat package.json | jq -r '.devDependencies.\"@playwright/test\"' || 'latest')" >> $GITHUB_ENV

            - name: Cache playwright binaries
              uses: actions/cache@v3
              id: playwright-cache
              with:
                path: |
                  ~/.cache/ms-playwright
                key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

            - name: npm install
              run: npm ci

            - shell: bash
              if: steps.playwright-cache.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps

            - name: provision db
              run: npm run db:migrate

            - name: start NextJS server
              run: npm run dev &

            - name: run specs
              run: |
                  npm run checks
                  npm run test:unit
                  npm run test:e2e
                  npm run test:coverage

            - name: Add code coverage to actions summary
              run: |
                  cat test-results/coverage/coverage-summary.md >> $GITHUB_STEP_SUMMARY
                  cat test-results/coverage/coverage-details.md >> $GITHUB_STEP_SUMMARY
            - name: Coverage Diff
              uses: bultkrantz/coverage-diff-action@v5.0.1
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  base-summary-filename: base-summary.json
                  coverage-filename: test-results/coverage/coverage-summary.json
            - name: Test build
              run: |
                  echo NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }} > .env
                  npm run build
            - uses: actions/upload-artifact@v4
              if: failure()
              with:
                  name: playwright-report
                  path: test-results/e2e
                  retention-days: 30
