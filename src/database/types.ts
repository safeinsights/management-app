/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely'

export type Generated<T> =
    T extends ColumnType<infer S, infer I, infer U> ? ColumnType<S, I | undefined, U> : ColumnType<T, T | undefined, T>

export type StudyRunStatus =
    | 'code-rejected'
    | 'code-review'
    | 'errored'
    | 'in-progress'
    | 'in-queue'
    | 'initiated'
    | 'results-available'
    | 'results-rejected'
    | 'results-review'

export type StudyStatus = 'approved' | 'archived' | 'changes-requested' | 'draft' | 'in-review'

export type Timestamp = ColumnType<Date, Date | string>

export interface Member {
    createdAt: Generated<Timestamp>
    email: string
    id: Generated<string>
    identifier: string
    name: string
    publicKey: string
    updatedAt: Generated<Timestamp>
}

export interface Study {
    approvedAt: Timestamp | null
    containerLocation: string
    createdAt: Generated<Timestamp>
    dataSources: Generated<string[]>
    description: string
    id: Generated<string>
    irbProtocols: string | null
    memberId: string
    outputMimeType: string | null
    piName: string
    researcherId: string
    status: Generated<StudyStatus>
    title: string
}

export interface StudyRun {
    codePath: string | null
    completedAt: Timestamp | null
    fileCount: number | null
    fileSize: number | null
    id: Generated<string>
    resultsPath: string | null
    startedAt: Timestamp | null
    status: Generated<StudyRunStatus>
    studyId: string
    uploadedAt: Timestamp | null
}

export interface DB {
    member: Member
    study: Study
    studyRun: StudyRun
}
