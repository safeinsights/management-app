services:
    postgres:
        image: 'postgres:16'
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - mgmnt-app
        environment:
            - POSTGRES_USER=mgmnt
            - POSTGRES_PASSWORD=mgmntpass
            - POSTGRES_DB=mgmnt_dev
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U mgmnt -d mgmnt_dev']
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
    dbgate:
        image: dbgate/dbgate
        restart: always
        container_name: dbgate
        networks:
            - mgmnt-app
        ports:
            - '3000:3000'
        volumes:
            - dbgate-data:/root/.dbgate
        environment:
            CONNECTIONS: bma
            LABEL_bma: Postgres
            SERVER_bma: postgres
            USER_bma: mgmnt
            PASSWORD_bma: mgmntpass
            PORT_bma: 5432
            ENGINE_bma: postgres@dbgate-plugin-postgres
    minio:
        image: minio/minio:latest
        ports:
            - '9198:9198'
            - '9199:9199'
        volumes:
            - minio-data:/data
        environment:
            MINIO_ROOT_USER: si-local-minio
            MINIO_ROOT_PASSWORD: si-local-minio
        command: server --console-address :9199 --address :9198 /data
        restart: unless-stopped
        networks:
            - mgmnt-app
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:9198/minio/health/live']
            interval: 30s
            timeout: 20s
            retries: 3
    create-buckets:
        image: minio/mc
        depends_on:
            minio:
                condition: service_healthy
        restart: on-failure
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc alias set siminio http://minio:9198 si-local-minio si-local-minio;
            /usr/bin/mc mb siminio/mgmt-app-local;
            "
        networks:
            - mgmnt-app
    mgmnt-app:
        container_name: mgmnt-app
        depends_on:
            postgres:
                condition: service_healthy
                restart: true
        environment:
            - CI=$CI
            - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
            - CLERK_SECRET_KEY=$CLERK_SECRET_KEY
            - AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID
            - E2E_CLERK_RESEARCHER_EMAIL=$E2E_CLERK_RESEARCHER_EMAIL
            - E2E_CLERK_RESEARCHER_PASSWORD=$E2E_CLERK_RESEARCHER_PASSWORD
            - E2E_CLERK_MEMBER_EMAIL=$E2E_CLERK_MEMBER_EMAIL
            - E2E_CLERK_MEMBER_PASSWORD=$E2E_CLERK_MEMBER_PASSWORD
            - E2E_CLERK_ADMIN_EMAIL=$E2E_CLERK_ADMIN_EMAIL
            - E2E_CLERK_ADMIN_PASSWORD=$E2E_CLERK_ADMIN_PASSWORD
            - DATABASE_URL=postgres://mgmnt:mgmntpass@postgres:5432/mgmnt_dev
            - S3_ENDPOINT=http://minio:9198
            - S3_BROWSER_ENDPOINT=http://localhost:9198
            - MINIO_ROOT_USER=si-local-minio
            - MINIO_ROOT_PASSWORD=si-local-minio
            - BUCKET_NAME=mgmt-app-local
            - AWS_ACCOUNT_ID=000000000000
            - AWS_REGION=us-east-1
        build:
            context: .
            dockerfile: ./Dockerfile.dev
        volumes:
            - ./:/app/
            - node_modules:/app/node_modules
        restart: always
        networks:
            - mgmnt-app
        ports:
            - 4000:4000
        healthcheck:
            test: ['CMD-SHELL', 'curl -s http://localhost:4000/']
            interval: 30s
            retries: 5
            start_period: 45s
            timeout: 30s
networks:
    mgmnt-app:
volumes:
    pgdata:
    node_modules:
    dbgate-data:
    minio-data:
