services:
    postgres:
        image: 'postgres:16'
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - mgmnt-app
        environment:
            - POSTGRES_USER=mgmnt
            - POSTGRES_PASSWORD=mgmntpass
            - POSTGRES_DB=mgmnt_dev
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U mgmnt -d mgmnt_dev']
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
    mgmnt-app:
        container_name: mgmnt-app
        depends_on:
            postgres:
                condition: service_healthy
                restart: true
        environment:
            - CI=$CI
            - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
            - CLERK_SECRET_KEY=$CLERK_SECRET_KEY
            - E2E_CLERK_USER_USERNAME=$E2E_CLERK_USER_USERNAME
            - E2E_CLERK_USER_PASSWORD=$E2E_CLERK_USER_PASSWORD
            - DATABASE_URL=postgres://mgmnt:mgmntpass@postgres:5432/mgmnt_dev
        build:
            context: .
            dockerfile: ./Dockerfile.dev
        volumes:
            - ./:/app/
            - node_modules:/app/node_modules
        restart: always
        networks:
            - mgmnt-app
        ports:
            - 3000:3000
        healthcheck:
            test: ['CMD-SHELL', 'curl -s http://localhost:3000/']
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
networks:
    mgmnt-app:
volumes:
    pgdata:
    node_modules:
